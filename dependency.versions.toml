[versions]
awaitility = "4.2.0"
aws-kafka-auth = "2.0.3"
aws-sdk-bom = "2.25.18"
azure-sdk-bom = "1.2.20"
dependency-management-plugin = "1.1.4"
gradle-versions-plugin = "0.51.0"
grpc-bom = "1.61.1"
jib-plugin = "2.0.0"
kafka-protobuf-serializer = "7.1.0"
libphonenumber = "8.13.30"
logstash-logback-encoder = "7.4"
microsoft-graph = "5.80.0"
mock-web-server = "4.12.0"
protobuf-bom = "3.25.3"
protobuf-plugin = "0.9.0"
quarkus = "3.6.0"
record-builder = "35"
sonar-scanner-plugin = "4.4.1.3373"
spring-boot = "2.0.0"
testcontainers = "1.19.6"
version-catalog-update-plugin = "0.8.0"

[libraries]
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
aws-kafka-auth = { module = "software.amazon.msk:aws-msk-iam-auth", version.ref = "aws-kafka-auth" }
aws-sdk-bom = { module = "software.amazon.awssdk:bom", version.ref = "aws-sdk-bom" }
azure-sdk-bom = { module = "com.azure:azure-sdk-bom", version.ref = "azure-sdk-bom" }
dependency-management-plugin = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "dependency-management-plugin" }
gradle-versions-plugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-versions-plugin" }
grpc-bom = { module = "io.grpc:grpc-bom", version.ref = "grpc-bom" }
kafka-protobuf-serializer = { module = "io.confluent:kafka-protobuf-serializer", version.ref = "kafka-protobuf-serializer" }
libphonenumber = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "libphonenumber" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-logback-encoder" }
microsoft-graph = { module = "com.microsoft.graph:microsoft-graph", version.ref = "microsoft-graph" }
mock-web-server = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mock-web-server" }
protobuf-bom = { module = "com.google.protobuf:protobuf-bom", version.ref = "protobuf-bom" }
protobuf-gradle-plugin = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobuf-plugin" }
quarkus-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkus" }
record-builder-core = { module = "io.soabase.record-builder:record-builder-core", version.ref = "record-builder" }
record-builder-processor = { module = "io.soabase.record-builder:record-builder-processor", version.ref = "record-builder" }
spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit5 = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
testcontainers-mockserver = { module = "org.testcontainers:mockserver", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

[plugins]
gradle-versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions-plugin" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib-plugin" }
sonar-scanner = { id = "org.sonarqube", version.ref = "sonar-scanner-plugin" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "version-catalog-update-plugin" }
